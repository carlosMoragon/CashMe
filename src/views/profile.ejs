<%- include('userHeader') %>
    <!-- Choose avatar Start -->
    <style>
        .avatar-selection img {
            cursor: pointer;
            margin: 5px;
            transition: transform 0.3s ease, border 0.3s ease;
        }

        .carousel-inner img {
            width: 100%;
            max-height: 150px;
            object-fit: contain;
        }

        .avatar-container {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .carousel-container {
            display: none;
        }

        .carousel-control-prev-icon,
        .carousel-control-next-icon {
            background-color: gray;
            border-radius: 50%;
            width: 30px;
            height: 30px;
        }

        .carousel-item.active:hover {
            cursor: pointer;
        }
    </style>
    <div class="row justify-content-center mt-4">
        <% if (typeof error !== 'undefined') { %>
            <div class="alert alert-danger" role="alert">
                <%= error %>
            </div>
        <% } %>
        <% if (typeof message !== 'undefined') { %>
            <div class="alert alert-success" role="alert">
                <%= message %>
            </div>
        <% } %>
    </div>
    <div class="text-center mt-4">
        <button class="btn btn-primary" id="select-avatar-btn">Select Avatar</button>
        <script>

        </script>
    </div>

    <div class="avatar-container text-center mt-4" style="display:none;">
        <h3>Your Selected Avatar</h3>
        <img id="profile-image" src="" alt="Profile Avatar" class="img-thumbnail" style="max-width: 200px;">
    </div>

    <div class="carousel-container text-center mt-4">
        <h3>Select an Avatar</h3>
        <div id="avatar-carousel" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="/images/avatar1.jpg" id="avatarelemnt" class="d-block w-100" alt="Avatar 1"
                        onclick="selectAvatar('/images/avatar1.jpg')">
                </div>
                <div class="carousel-item">
                    <img src="/images/avatar2.jpg" id="avatarelemnt" class="d-block w-100" alt="Avatar 2"
                        onclick="selectAvatar('/images/avatar2.jpg')">
                </div>
                <div class="carousel-item">
                    <img src="/images/avatar3.jpg" id="avatarelemnt" class="d-block w-100" alt="Avatar 3"
                        onclick="selectAvatar('/images/avatar3.jpg')">
                </div>
                <div class="carousel-item">
                    <img src="/images/avatar4.jpg" id="avatarelemnt" class="d-block w-100" alt="Avatar 4"
                        onclick="selectAvatar('/images/avatar4.jpg')">
                </div>
                <div class="carousel-item">
                    <img src="/images/avatar5.jpg" id="avatarelemnt" class="d-block w-100" alt="Avatar 5"
                        onclick="selectAvatar('/images/avatar5.jpg')">
                </div>
            </div>
            <a class="carousel-control-prev" href="#avatar-carousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#avatar-carousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" style="color: black;"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
        <button id="select-button" class="btn btn-success" onclick="finalizeSelection()" style="margin: 10%;">Save
            Configuration</button>
    </div>

    <script>
        // Variable para almacenar la imagen seleccionada
        let selectedImagePath = '';

        // Función para seleccionar un avatar al hacer clic en una imagen
        function selectAvatar(imagePath) {
            selectedImagePath = imagePath; // Guarda la ruta de la imagen seleccionada
            document.getElementById('profile-image').src = imagePath; // Previsualiza la imagen

            // Quita el borde rojo de cualquier imagen previamente seleccionada
            document.querySelectorAll('.carousel-item img').forEach(img => {
                img.classList.remove('selected'); // Elimina la clase "selected" de todas las imágenes
            });

            // Añade el borde rojo a la imagen seleccionada
            const clickedImage = document.querySelector(`img[src="${imagePath}"]`);
            if (clickedImage) {
                clickedImage.classList.add('selected'); // Añade la clase "selected" a la imagen seleccionada
            }
        }

        // Función para finalizar la selección del avatar al hacer clic en el botón "Select"
        function finalizeSelection() {
            if (selectedImagePath) {
                // Oculta el carrusel
                const carouselContainer = document.querySelector('.carousel-container');
                carouselContainer.style.display = 'none';

                // Muestra la sección del avatar seleccionado
                const avatarContainer = document.querySelector('.avatar-container');
                avatarContainer.style.display = 'block';
            } else {
                alert('Please select an avatar before finalizing your choice.'); // Mensaje si no se selecciona una imagen
            }
        }

        // Evento del botón "Select Avatar" para abrir el carrusel
        document.getElementById('select-avatar-btn').addEventListener('click', function () {
            const carouselContainer = document.querySelector('.carousel-container');
            carouselContainer.style.display = 'block'; // Muestra el carrusel
        });

        // Asocia la función finalizeSelection al botón "Select"
        document.getElementById('select-button').addEventListener('click', finalizeSelection);
    </script>
    <!-- Choose avatar End-->


    <!-- User Info Start -->
    <div class="container mt-5">
        <h2 class="text-center mb-4">Client Data</h2>
        <table class="table table-bordered table-striped">
            <tbody>
                <tr>
                    <td class="font-weight-bold">Name:</td>
                    <% if (typeof username !== 'undefined') { %>
                        <td>
                            <%= username %>
                        </td>
                        <% } else { %>
                            <td>Not Authenticated</td>
                            <% } %>
                </tr>
                <tr>
                    <td class="font-weight-bold">Email:</td>
                    <% if (typeof email !== 'undefined') { %>
                        <td>
                            <%= email %>
                        </td>
                        <% } else { %>
                            <td>Not Authenticated</td>
                            <% } %>
                </tr>
            </tbody>
        </table>

        <!-- Multiple Accounts Section -->
        <h3 class="mt-4 text-center">Associated Accounts</h3>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Account Name</th>
                    <th>Balance</th>
                    <th>Notifications</th>
                </tr>
            </thead>
            <tbody id="accountsTableBody">
                  <!-- Aquí se llenará dinámicamente con AJAX -->
            </tbody>
            <tr>
                <td>accountName1</td>
                <td>$150.00</td>
                <td> Notification 1</td>
            </tr>
            <tr>
                <td>accountName2</td>
                <td>$225.50</td>
                <td> Notification 1</td>
            </tr>
        </table>
              
        <script>
            // Función para cargar las cuentas del usuario
            function loadAccounts() {
                fetch('/profile/getAccounts')
                .then(response => {
                    if (!response.ok) {
                      throw new Error('Error al cargar las cuentas');
                    }
                      return response.json();
                    })
                .then(data => {
                    const tableBody = document.getElementById('accountsTableBody');
                    tableBody.innerHTML = ''; 
              
                    if (data.accounts.length === 0) {
                      tableBody.innerHTML = '<tr><td colspan="3">No accounts found.</td></tr>';
                      return;
                    }
              
                    data.accounts.forEach(account => {
                      const row = document.createElement('tr');
                      row.innerHTML = `
                          <td>Account ${account.id}</td>
                          <td>$${account.saldo.toFixed(2)}</td>
                          <td>${account.notificaciones === 1 ? 'Notification Enabled' : 'No Notifications'}</td>
                      `;
                      tableBody.appendChild(row);
                    });
                })
                .catch(err => {
                      console.error(err);
                      alert('Failed to load accounts.');
                });
            }
              
            document.addEventListener('DOMContentLoaded', loadAccounts);
            </script>              
        </table>
    </div>
    <!-- User Info End -->

    <!-- Jardín Start -->
    <style>
        /* Estilo básico para el jardín */
        .garden {
            width: 100%;
            height: 500px;
            background-image: url('/images/jardin.jpg');
            /* Imagen de jardín */
            background-size: cover;
            position: relative;
            border: 2px solid #000;
            margin-top: 20px;
        }

        /* Estilo para las plantas */
        .plant {
            width: 100px;
            /* Tamaño de la planta */
            height: 100px;
            position: absolute;
            cursor: pointer;
        }

        /* Botón para comprar la planta */
        .buy-plant-btn {
            margin-top: 10px;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }

        .buy-plant-btn:hover {
            background-color: #45a049;
        }

        /* Estilo para las plantas en la galería */
        .plant-container {
            display: flex;
            gap: 20px;
            margin-top: 20px;
        }

        .plant-item {
            text-align: center;
        }

        .plant-item img {
            width: 100px;
            height: 100px;
            cursor: pointer;
        }
    </style>
    <!-- Personal Challenges and rewards Start -->
    <div class="container mt-5">
        <h2 class="text-center mb-4">Client Challenges & Rewards</h2>
        <div class="d-flex justify-content-between align-items-center">
            <button id="setChallenge" class="btn btn-primary" data-toggle="modal" data-target="#setChallengeModal">
                Set Challenge
            </button>

            <div class="d-flex align-items-center">
                <% if (typeof saldoAcumulado !== 'undefined') { %>
                    <p id="savedAmount" class="mr-2 mb-0">Total Accumulated: € <%= saldoAcumulado %>
                <% } else { %>
                    <p id="savedAmount" class="mr-2 mb-0">Total Accumulated: Not defined
                <% } %>
                </p>
                <img src="/images/coin.png" alt="Savings Image" width="40" height="40">
            </div>
        </div>
        <!-- Modal para establecer el desafío -->
        <div class="modal fade" id="setChallengeModal" tabindex="-1" role="dialog"
            aria-labelledby="setChallengeModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="setChallengeModalLabel">Set Your Savings Challenge</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="setChallengeForm">
                            <div class="form-group">
                                <label for="amount">Enter Amount to Save</label>
                                <input type="number" id="amount" class="form-control" placeholder="Enter amount"
                                    required>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary" id="saveChallenge">Save Challenge</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Personal Challenges and rewards End -->


    <div class="container mt-5">
        <h2 class="text-center mb-4">Client Garden</h2>

        <!--No esta ni agarrando el click pero bueno aja. Luego sigo-->
        <!-- Contenedor de las plantas disponibles START -->
        <% if (typeof plantasDisponibles !== 'undefined'){%>
        <div class="plant-container">
            <% plantasDisponibles.forEach(plant=> { %>
                <div class="plant-item">
                    <img src="/images/plantas/<%= plant.id %>.jpg" alt="Plant <%= plant.id %>"
                        id="plant<%= plant.id %>-img" draggable="true" ondragstart="drag(event)">
                    <button class="buy-plant-btn" data-plant-id="<%= plant.id %>"
                        data-plant-price="<%= plant.evolucion %>">
                        Buy Plant: €<%= plant.evolucion %>
                    </button>
                </div>
                <% }) %>
        </div>
        <% } %>
        <!-- Contenedor de las plantas disponibles END -->

        <!-- Contenedor del jardín START -->
        <div class="garden" id="garden" ondrop="drop(event)" ondragover="allowDrop(event)"></div>
        <!-- Contenedor del jardín END -->


        <script>
            document.querySelectorAll('.buy-plant-btn').forEach(button => {
                button.addEventListener('click', function () {
                    console.log('Al menos detecta el click');
                    const plantId = this.dataset.plantId;
                    const plantPrice = parseFloat(this.dataset.plantPrice);
                    buyPlant(plantId, plantPrice);
                });
            });

            function buyPlant(plantId, plantPrice) {
                if (saldoAcumulado >= plantPrice) {
                    const plantImg = document.getElementById(`plant${plantId}-img`).cloneNode(true);
                    plantImg.removeAttribute('id'); // Evita conflictos de ID duplicados
                    document.getElementById('garden').appendChild(plantImg);
                    saldoAcumulado -= plantPrice; // Resta el precio de la planta al saldo
                    alert('Plant purchased and added to your garden!');
                } else {
                    alert('Insufficient balance to buy this plant.');
                }
            }
            // Event listener para el botón de "Save Challenge"
            document.getElementById('saveChallenge').addEventListener('click', function () {
                // Obtener el valor ingresado por el usuario
                const challengeAmount = document.getElementById('amount').value;

                // Verificar si el valor es válido
                if (!challengeAmount || isNaN(challengeAmount) || challengeAmount <= 0) {
                    alert('Please enter a valid amount.');
                    return;
                }

                // Enviar el valor al servidor usando Fetch API
                fetch('/saveChallenge', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ amount: challengeAmount })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Challenge saved successfully!');
                            // Actualizar la interfaz con el saldo actualizado, si es necesario
                            document.getElementById('savedAmount').textContent = `Total Saved: € ${data.newBalance}`;
                            $('#setChallengeModal').modal('hide'); // Cerrar el modal
                        } else {
                            alert('Error saving challenge.');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred.');
                    });
            });

        </script>
    </div>
    <!-- Jardín End-->
    <%- include('footer') %>