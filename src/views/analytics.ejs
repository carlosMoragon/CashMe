<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CashMe</title>
    <link href="/images/logoCashMe.jpg" rel="icon">
    <link href="/stylesheets/analytics.css" rel="stylesheet">
    <link href="/stylesheets/analytics.css" rel="stylesheet">
    <link href="/stylesheets/paloma.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <%- include('header') %>

    <!-- Analysis Section -->
    <div class="analysis-container">
        <div class="statistics">
            <h2>Statistics last 12 months</h2>
        </div>

        <div class="totals">
            <!-- Remove the total amounts from here -->
        </div>
        <div class="cards-container">
            <div class="card" data-toggle="modal" data-target="#ingresosModal">
                <p class="heading">Earnings</p>
                <p>Total: <span id="total-ingresos"></span>€</p> <!-- Add dollar symbol here -->
                <p>More Information</p>
            </div>
            <div class="card" data-toggle="modal" data-target="#gastosModal">
                <p class="heading">Expenses</p>
                <p>Total: <span id="total-gastos"></span>€</p> <!-- Add dollar symbol here -->
                <p>More Information</p>
            </div>
            <div class="card" data-toggle="modal" data-target="#netoModal">
                <p class="heading">Net Profit</p>
                <p>Total: <span id="total-neto"></span>€</p> <!-- Add dollar symbol here -->
                <p>More Information</p>
            </div>
        </div>

        <!-- Modals -->
        <div class="modal fade" id="ingresosModal" tabindex="-1" role="dialog" aria-labelledby="ingresosModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="ingresosModalLabel">Earnings - Last 12 months</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <canvas id="ingresosChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="gastosModal" tabindex="-1" role="dialog" aria-labelledby="gastosModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="gastosModalLabel">Expenses - Last 12 months</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <canvas id="gastosChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="netoModal" tabindex="-1" role="dialog" aria-labelledby="netoModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="netoModalLabel">Net Profit - Last 12 months</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <canvas id="netoChart"></canvas>
                    </div>
                </div>
            </div>
        </div>


        <!-- Mes Pasado Section -->
        <div class="last-month-section">
            <div class="last-month-header">
                <h3>Last Month</h3>
            </div>
            <div class="last-month-data">
                <div class="last-month-card">
                    <h3>Earnings</h3>
                    <p id="last-month-ingresos"></p>
                    <p>Value: <span id="last-month-ingresos-value"></span>$</p> <!-- Add value here -->
                </div>
                <div class="last-month-card">
                    <h3>Expenses</h3>
                    <p id="last-month-gastos"></p>
                    <p>Value: <span id="last-month-gastos-value"></span>$</p> <!-- Add value here -->
                </div>
                <div class="last-month-card">
                    <h3>Net Profit</h3>
                    <p id="last-month-neto"></p>
                    <p>Value: <span id="last-month-neto-value"></span>$</p> <!-- Add value here -->
                </div>
            </div>
        </div>

        <div class="text-center mt-4">
            <button class="btn btn-primary" onclick="window.location.href='/chatbot';">Take advise - CashMeBot</button>
        </div>

        <!-- Financial Control Panel -->
        <div class="financial-control-panel">
            <h3>Financial Dashboard</h3>
            <div class = "chart-container">
                <canvas id="combinedChart"></canvas>
            </div>
        </div>
        <div class="export-button-container">
            <button id="export-html-button">Export to HTML</button>
        </div>
    </div>
    <div id="export-data" style="display: none;">
        <div id="export-ingresos"></div>
        <div id="export-gastos"></div>
        <div id="export-neto"></div>
        <div id="export-combined"></div>
        <div id="custom-content"></div> <!-- Add this div for custom content -->
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ctxIngresos = document.getElementById('ingresosChart').getContext('2d');
            const ctxGastos = document.getElementById('gastosChart').getContext('2d');
            const ctxNeto = document.getElementById('netoChart').getContext('2d');
            const ctxCombined = document.getElementById('combinedChart').getContext('2d');

            function getLast12Months() {
                const months = [];
                const date = new Date();
                for (let i = 11; i > -1; i--) {
                    const d = new Date(date.getFullYear(), date.getMonth() - i, 1);
                    months.push(d.toISOString().slice(0, 7));
                }
                return months;
            }

            const labels = getLast12Months();

            fetch('/analytics/data/ingresos')
                .then(response => response.json())
                .then(data => {
                    new Chart(ctxIngresos, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Ingresos',
                                data: data.data,
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                    document.getElementById('export-ingresos').textContent = JSON.stringify(data);
                });

            fetch('/analytics/data/gastos')
                .then(response => response.json())
                .then(data => {
                    new Chart(ctxGastos, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Gastos',
                                data: data.data,
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                    document.getElementById('export-gastos').textContent = JSON.stringify(data);
                });

            fetch('/analytics/data/neto')
                .then(response => response.json())
                .then(data => {
                    new Chart(ctxNeto, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Neto',
                                data: data.data,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                    document.getElementById('export-neto').textContent = JSON.stringify(data);

                    // Determine conclusion text based on neto value
                    const neto = data.total;
                    let conclusionText = '';
                    if (neto > 3000) {
                        conclusionText = 'Texto para neto > 3000';
                    } else if (neto > 500) {
                        conclusionText = 'Texto para neto > 500';
                    } else if (neto > -500 && neto < 500) {
                        conclusionText = 'Texto para -500 < neto < 500';
                    } else if (neto < -500 && neto > -3000) {
                        conclusionText = 'Texto para neto < -500';
                    } else if (neto < -3000) {
                        conclusionText = 'Texto para neto < -3000';
                    }
                    document.getElementById('conclusion-text').textContent = conclusionText;
                });

            fetch('/analytics/data/combined')
                .then(response => response.json())
                .then(data => {
                    new Chart(ctxCombined, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Ingresos',
                                data: data.ingresos,
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 1
                            }, {
                                label: 'Gastos',
                                data: data.gastos,
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                    document.getElementById('export-combined').textContent = JSON.stringify(data);
                });

            // Fetch and display total values
            fetch('/analytics/data/total-ingresos')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('total-ingresos').textContent = data.total;
                    document.getElementById('export-ingresos').textContent = data.total;
                });

            fetch('/analytics/data/total-gastos')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('total-gastos').textContent = data.total;
                    document.getElementById('export-gastos').textContent = data.total;
                });

            fetch('/analytics/data/total-neto')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('total-neto').textContent = data.total;
                    document.getElementById('export-neto').textContent = data.total;
                });

            // Fetch and display last month values
            fetch('/analytics/data/last-month')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('last-month-ingresos-value').textContent = data.ingresos;
                    document.getElementById('last-month-gastos-value').textContent = data.gastos;
                    document.getElementById('last-month-neto-value').textContent = data.neto;
                });

            document.getElementById('export-html-button').addEventListener('click', function() {
                const ingresosTotal = document.getElementById('export-ingresos').textContent;
                const gastosTotal = document.getElementById('export-gastos').textContent;
                const netoTotal = document.getElementById('export-neto').textContent;
                const customContent = document.getElementById('custom-content').textContent; // Fetch custom content

                // Determine conclusion text based on neto value
                let conclusionText = '';
                const neto = parseFloat(netoTotal);
                if (neto > 3000) {
                    conclusionText = 'Constant effort and financial discipline have yielded excellent results. Thanks to rigorous planning, prioritizing expense control, and generating additional income, you have managed to accumulate a considerable amount of savings. This success highlights the importance of a strategic approach, setting clear goals, and adjusting financial habits to maximize the gap between income and expenses. Now, you can set more ambitious goals, such as long-term investments or achieving financial freedom.';
                } else if (neto > 500) {
                    conclusionText = 'Although the savings achieved are positive, there is a sense that more could have been accomplished. Perhaps some unexpected expenses or less optimal decisions affected the final result. This scenario underscores the importance of better foresight and stricter adjustments in budget control. Nevertheless, the progress made is valuable, and you can use this experience to strengthen your approach and achieve more significant savings in the future.';
                } else if (neto > -500 && neto < 500) {
                    conclusionText = 'The result shows that savings have been very limited, although large losses have been avoided. This delicate balance reflects the need to reassess financial priorities and seek more effective ways to increase income and control expenses. While it is not an ideal result, it offers an opportunity to learn, adjust habits, and strengthen the commitment to savings goals.';
                } else if (neto < -500 && neto > -3000) {
                    conclusionText = 'Although finances ended with a negative balance, the losses were manageable. This could be due to unforeseen circumstances, such as emergencies or investments that did not generate the expected results. However, the impact was moderate thanks to prudent management that prevented the losses from getting out of control. It is an important lesson to reinforce the emergency fund and evaluate financial decisions more carefully in the future.';
                } else if (neto < -3000) {
                    conclusionText = 'The final balance reveals a significant mismatch between income and expenses, reflecting poor financial management during the analyzed period. Expenses far exceeded income, which could have been due to impulsive decisions, lack of planning, or unexpected events without sufficient economic backup. This scenario demands a deep review of personal finances, prioritizing drastic adjustments in the budget, generating additional income, and creating healthier habits to avoid falling into a cycle of debt or economic instability.';
                }

                const link = document.createElement('a');
                const blob = new Blob([`
                    <!DOCTYPE html>
                    <html lang="es">
                    <head>
                        <meta charset="UTF-8">
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <title>Reporte Financiero</title>
                        <style>
                            body {
                                font-family: "Poppins", sans-serif;
                                background-color: #f4f4f9;
                                color: #333;
                                padding: 20px;
                            }
                            h1, h2 {
                                color: #054d1a;
                            }
                            .section {
                                margin-bottom: 20px;
                            }
                            .section pre {
                                background-color: #fff;
                                padding: 10px;
                                border: 1px solid #ddd;
                                border-radius: 5px;
                                overflow-x: auto;
                            }
                            .summary {
                                margin-bottom: 10px;
                                font-weight: bold;
                            }
                            p {
                                margin-bottom: 10px;
                            }
                        </style>
                    </head>
                    <body>
                        <h1>Financial Report</h1>
                        <div class="section">
                            <h2>Earnings</h2>
                            <p>To improve savings, it is essential to analyze and diversify income sources. Identify opportunities to increase your primary income, such as salary negotiations or bonuses, and consider generating additional income through side activities, freelancing, or passive investments. The key is to establish a stable and sustainable income flow that allows you to cover your needs and generate a surplus for savings.</p>
                            <pre>Total Earnings: ${ingresosTotal}</pre>
                        </div>
                        <div class="section">
                            <h2>Expenses</h2>
                            <p>Expense control is essential to boost savings. Review your consumption habits and prioritize what is truly necessary over what is expendable. Implement strategies such as monthly budgets, daily expense tracking, and negotiations to reduce fixed costs, such as services or rent. Adopt practices like buying in bulk and avoiding high-interest debt that can erode your savings capacity.</p>
                            <pre>Total Expenses: ${gastosTotal}</pre>
                        </div>
                        <div class="section">
                            <h2>Net Profit</h2>
                            <p>The difference between income and expenses forms the foundation of savings. Increasing this margin requires maintaining a balance between raising income and reducing expenses, always ensuring a surplus. This margin can be allocated to an emergency fund, investments, or specific financial goals, maximizing capital growth in the long term.</p>
                            <pre>Total Net Profit: ${neto}</pre>
                        </div>
                        <div class="section">
                            <h2>Summary</h2>
                            <p>${conclusionText}</p>
                        </div>
                    </body>
                    </html>
                `], { type: 'text/html' });

                link.href = URL.createObjectURL(blob);
                link.download = 'Financial_report.html';
                link.click();
            });
        });
    </script>
    <%- include('footer') %>
</body>
</html>