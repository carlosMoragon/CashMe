<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Análisis</title>
    <link href="/stylesheets/analytics.css" rel="stylesheet">
    <link href="/stylesheets/paloma.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <%- include('header') %>
    <link href="/stylesheets/analytics.css" rel="stylesheet">
    <link href="/stylesheets/paloma.css" rel="stylesheet">

    <!-- Analysis Section -->
    <div class="analysis-container">
        <div class="statistics">
            <h2>Estadísticas últimos 12 meses</h2>
        </div>

        <div class="totals">
            <!-- Remove the total amounts from here -->
        </div>
        <div class="cards-container">
            <div class="card" data-toggle="modal" data-target="#ingresosModal">
                <p class="heading">Ingresos</p>
                <p>Total: <span id="total-ingresos"></span>$</p> <!-- Add dollar symbol here -->
                <p>Más información</p>
            </div>
            <div class="card" data-toggle="modal" data-target="#gastosModal">
                <p class="heading">Gastos</p>
                <p>Total: <span id="total-gastos"></span>$</p> <!-- Add dollar symbol here -->
                <p>Más información</p>
            </div>
            <div class="card" data-toggle="modal" data-target="#netoModal">
                <p class="heading">Neto</p>
                <p>Total: <span id="total-neto"></span>$</p> <!-- Add dollar symbol here -->
                <p>Más información</p>
            </div>
        </div>

        <!-- Modals -->
        <div class="modal fade" id="ingresosModal" tabindex="-1" role="dialog" aria-labelledby="ingresosModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="ingresosModalLabel">Ingresos - Últimos 12 meses</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <canvas id="ingresosChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="gastosModal" tabindex="-1" role="dialog" aria-labelledby="gastosModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="gastosModalLabel">Gastos - Últimos 12 meses</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <canvas id="gastosChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="netoModal" tabindex="-1" role="dialog" aria-labelledby="netoModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="netoModalLabel">Neto - Últimos 12 meses</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <canvas id="netoChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Lista con efecto hover -->
        <div class="list-section">
            <h3>Lista</h3>
            <div class="list">
                <ul>
                    <li><span>Elemento 1</span></li>
                    <li><span>Elemento 2</span></li>
                    <li><span>Elemento 3</span></li>
                    <li><span>Elemento 4</span></li>
                </ul>
            </div>
        </div>

        <!-- Financial Control Panel -->
        <div class="financial-control-panel">
            <h3>Panel de Control Financiero</h3>
            <div class="chart-container">
                <canvas id="combinedChart"></canvas>
            </div>
        </div>
        <div class="export-button-container">
            <button id="export-html-button">Exportar a HTML</button>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const ctxIngresos = document.getElementById('ingresosChart').getContext('2d');
            const ctxGastos = document.getElementById('gastosChart').getContext('2d');
            const ctxNeto = document.getElementById('netoChart').getContext('2d');
            const ctxCombined = document.getElementById('combinedChart').getContext('2d');

            function getLast12Months() {
                const months = [];
                const date = new Date();
                for (let i = 11; i > -1; i--) {
                    const d = new Date(date.getFullYear(), date.getMonth() - i, 1);
                    months.push(d.toISOString().slice(0, 7));
                }
                return months;
            }

            const labels = getLast12Months();

            fetch('/analytics/data/ingresos')
                .then(response => response.json())
                .then(data => {
                    new Chart(ctxIngresos, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Ingresos',
                                data: data.data,
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                });

            fetch('/analytics/data/gastos')
                .then(response => response.json())
                .then(data => {
                    new Chart(ctxGastos, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Gastos',
                                data: data.data,
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                });

            fetch('/analytics/data/neto')
                .then(response => response.json())
                .then(data => {
                    new Chart(ctxNeto, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Neto',
                                data: data.data,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 2
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                }
                            }
                        }
                    });
                });

            fetch('/analytics/data/combined')
                .then(response => response.json())
                .then(data => {
                    new Chart(ctxCombined, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Ingresos',
                                data: data.ingresos,
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 1
                            }, {
                                label: 'Gastos',
                                data: data.gastos,
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                });

            // Fetch and display total values
            fetch('/analytics/data/total-ingresos')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('total-ingresos').textContent = data.total;
                });

            fetch('/analytics/data/total-gastos')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('total-gastos').textContent = data.total;
                });

            fetch('/analytics/data/total-neto')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('total-neto').textContent = data.total;
                });

            document.getElementById('export-html-button').addEventListener('click', function() {
                const link = document.createElement('a');
                const blob = new Blob(['<!DOCTYPE html><html><head><title>Exported HTML</title></head><body></body></html>'], { type: 'text/html' });
                link.href = URL.createObjectURL(blob);
                link.download = 'reporte_financiero.html';
                link.click();
            });
        });
    </script>
    <%- include('footer') %>
</body>
</html>